import { Dispatch, SetStateAction, createContext, useContext, useState } from 'react'

import { Account } from '../interfaces/Account';

export interface GlobalStateInterface {
  account: Account | null,
  expiresOn: string | null,
  loggedIn: boolean
}

const GlobalStateContext = createContext({
  state: {} as GlobalStateInterface,
  setState: {} as Dispatch<SetStateAction<GlobalStateInterface>>,
});


const GlobalStateProvider = ({
  children,
  value = {} as GlobalStateInterface,
}: {
  children: React.ReactNode;
  value?: GlobalStateInterface;
}) => {
  const [state, setState] = useState(value);
  return (
    <GlobalStateContext.Provider value={{ state, setState }}>
      {children}
    </GlobalStateContext.Provider>
  )
};

const useGlobalState = () => {
  const context = useContext(GlobalStateContext);
  
  if (!context) {
    throw new Error("useGlobalState must be used within a GlobalStateContext");
  }
  return context;
};

export { GlobalStateProvider, useGlobalState };